.TH _printf 3 "2023-03-30" "v1.0" 

.SH NAME
_printf \- format and print data

.SH SYNOPSIS
.B #include <stdio.h>
.B #include <stdarg.h>
.I int _printf(const char *format, ...);

.SH DESCRIPTION
The \fB_printf\fR() function writes output to the standard output stream, or to a file stream, according to a format string and a variable list of arguments.

The \fIformat\fR argument is a string that contains zero or more format specifiers. Each format specifier is introduced by the % character and ends with a conversion specifier.

The format specifiers can be one of the following:

.TP
.B %c
Prints a single character

.TP
.B %s
Prints a string with a null-byte termination

.TP
.B %d, %i
Prints a signed integer in decimal format

.TP
.B %%
Prints a literal percent sign

.SH RETURN VALUE
Upon successful completion, the \fB_printf\fR() function returns the number of characters printed. On error, a negative value is returned.

.SH EXAMPLES
The following code snippet demonstrates how to use the \fB_printf\fR() function:

.nf
.B #include "main.h"
.B #include <stdio.h>

.I int main(void)
{
    int count = 0;
    count += _printf("Hello, %s!\n", "world");
    count += _printf("The answer is %d.\n", 42);
    count += _printf("A literal percent sign: %%\n");
    return count;
}
.fi

This code will output the following:

.nf
.B Hello, world!
.B The answer is 42.
.B A literal percent sign: %
.fi

.SH NOTES
The \fB_printf\fR() function is a variadic function, meaning it can take a variable number of arguments. These arguments must match the format specifiers in the format string.

.SH SEE ALSO
printf(3)

.SH AUTHOR
Jean Barbosa Jose Rivera

.SH BUGS
Please report any bugs to [jeanmaldy@gmail.com, jjoseriveram01@gmail.com]
